apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    io.kompose.service: stack-nginx
  name: stack-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: stack-nginx
  serviceName: "nginx"
  template:
    metadata:
      labels:
        io.kompose.network/net1: "true"
        io.kompose.service: stack-nginx
    spec:
      initContainers:
        - name: assets
          image: docker-django-nginx-uwsgi_stack-next
          imagePullPolicy: Never
          command: ['cp', '-r', '/usr/app/public/assets/.', '/usr/app/public/assets_volume']
          volumeMounts:
            - name: static-front
              mountPath: /usr/app/public/assets_volume
        - name: init
          image: docker-django-nginx-uwsgi_stack-django
          imagePullPolicy: Never
          command: ['/bin/sh', '/home/django_test/init.sh']
          #command: ['python3.8', 'manage.py', 'collectstatic', '--noinput']
          volumeMounts:
            - name: static-back
              mountPath: /home/django_test/static/  
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: password
            - name: POSTGRES_HOST
              value: postgres-service

      containers:
        - image: docker-django-nginx-uwsgi_stack-nginx
          imagePullPolicy: Never
          name: stack-nginx
          ports:
            - containerPort: 80
          resources: {}
          volumeMounts:
            - mountPath: /home/django_test/static
              name: static-back
              readOnly: true
            - mountPath: /usr/app/public/assets
              name: static-front
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: static-back
          persistentVolumeClaim:
            claimName: static-back
        - name: static-front
          persistentVolumeClaim:
            claimName: static-front
        - name: static-db
          persistentVolumeClaim:
            claimName: static-db
status:
  replicas: 1
